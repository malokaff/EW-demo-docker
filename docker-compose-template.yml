#version: '3'
services:
  backend:
    container_name: backend-$AppName
    build:
      context: .
      dockerfile: dockerfile-backend
    networks:
      dockervlan:
        ipv4_address: $IpBackend
    dns: $IpDns

  mosquitto:
    container_name: mosquitto-$AppName
    image: eclipse-mosquitto
    volumes:
      - ./config:/mosquitto/config
      - ./data/mqtt:/mosquitto/data
      - ./log:/mosquitto/log
    build: 
      context: .
      dockerfile: dockerfile-mosquitto
#    depends_on:
#      - db
    ports:
      - "1883:1883"
      - "9001:9001" #default mqtt port for websockets
    dns: $IpDns
    networks:
      dockervlan:
        ipv4_address: $IpMosquitto
    restart: always

  db:
    container_name: mysql-server-$AppName
    image: mysql:5.7
    command: --init-file /docker-entrypoint-initdb.d/init.sql
    volumes:
      - ./data/sql:/var/lib/mysql:rw
      - ./config/MQTT.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Pensando0$$
      MYSQL_DATABASE: MQTT
      MYSQL_USER: mqtt
      MYSQL_PASSWORD: mqtt
    ports:
      - "3306:3306"
    dns: $IpDns
    networks:
      dockervlan:
        ipv4_address: $IpMysql

  frontend1:
    container_name: frontend1-$AppName
    build: 
      context: .
      dockerfile: dockerfile-frontend
    #image: php:8.2-apache
    volumes:
      - ./data/frontend1:/var/www/html/
    ports:
      - 8080:80
    dns: $IpDns
    networks:
      dockervlan:
        ipv4_address: $IpFrontend1
  frontend2:
    container_name: frontend2-$AppName
    build: 
      context: .
      dockerfile: dockerfile-frontend
    #image: php:8.2-apache
    volumes:
      - ./data/frontend2:/var/www/html/
    ports:
      - 8081:80
    dns: $IpDns
    networks:
      dockervlan:
        ipv4_address: $IpFrontend2
  nginx:
    container_name: nginx-lb-$AppName
    build: 
      context: .
      dockerfile: dockerfile-nginx
    volumes:
      - ./data/frontend2:/var/www/html/
    ports:
      - 80:80
    dns: $IpDns
    networks:
      dockervlan:
        ipv4_address: $IpLB

  dns:
    container_name: dns-bind-$AppName
    build: 
      context: .
      dockerfile: dockerfile-dns
    networks:
      dockervlan:
        ipv4_address: $IpDns

  phpmyadmin:
    container_name: phpmyadmin-$AppName
    image: phpmyadmin/phpmyadmin
    links:
    - db
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
     - 8082:80
    dns: $IpDns
    networks:
      dockervlan:
        ipv4_address: $IpPhpmyadmin

volumes:
  db_data: {}
  config:
  data:
  log:
  
networks:
  dockervlan:
    name: dockervlan
    driver: macvlan
    driver_opts:
      parent: $IntMacVlan
      macvlan_mode: private
    ipam:
      config:
        - subnet: "$SubnetMacvlan"
          ip_range: "$IpRangeMacvlan"
          gateway: "$GatewayMacvlan"
  oob:
    #external: true
    name: oob
    driver: bridge
    driver_opts:
      parent: $IntBridge
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
